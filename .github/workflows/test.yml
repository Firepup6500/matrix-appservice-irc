name: Build docs

on:
  push:

  workflow_dispatch:

jobs:
  build-14:
    runs-on: ubuntu-20.04
    container: node:14
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - run: npm run-script test
  build-16:
    runs-on: ubuntu-20.04
    container: node:16
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - run: npm run-script test
  build-16-postgres:
    runs-on: ubuntu-20.04
    container: node:16
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: ircbridge_integtest
          # required
          POSTGRES_PASSWORD: postgres_password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres_user
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - run: npm run-script test
        env:
          IRCBRIDGE_TEST_PGDB: "ircbridge_integtest"
          IRCBRIDGE_TEST_PGURL: "postgresql://postgres_user:postgres_password@postgres_db"
          IRCBRIDGE_TEST_ENABLEPG: "yes"
